# Generated by Django 4.0.2 on 2022-02-25 09:34

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Questionpoolnew',
            fields=[
                ('questionid', models.TextField(blank=True, db_column='questionid', primary_key=True, serialize=False)),
                ('questioncode', models.TextField(blank=True, db_column='questioncode', null=True)),
                ('question', models.TextField(blank=True, db_column='question', null=True)),
                ('comment', models.TextField(blank=True, db_column='comment', null=True)),
                ('categoryid', models.TextField(blank=True, db_column='CategoryID', null=True)),
                ('categorycode', models.TextField(blank=True, db_column='CategoryCode', null=True)),
                ('origin', models.IntegerField(blank=True, db_column='Origin', null=True)),
                ('origincode', models.TextField(blank=True, db_column='OriginCode', null=True)),
                ('categorynewid', models.TextField(blank=True, db_column='CategoryNewID', null=True)),
                ('defaultdisplayindex', models.TextField(blank=True, db_column='DefaultDisplayIndex', null=True)),
                ('creationinfo', models.TextField(blank=True, db_column='CreationInfo', null=True)),
                ('conceptuallink', models.TextField(blank=True, db_column='ConceptualLink', null=True)),
                ('questiontypeid', models.IntegerField(blank=True, db_column='QuestionTypeID', null=True)),
                ('parentid', models.TextField(blank=True, db_column='ParentId', null=True)),
            ],
            options={
                'db_table': 'questionpoolnew',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Viq',
            fields=[
                ('qid', models.IntegerField(blank=True, db_column='QId', null=True)),
                ('objecttype', models.IntegerField(blank=True, db_column='ObjectType', null=True)),
                ('categoryid', models.IntegerField(blank=True, db_column='CategoryId', null=True)),
                ('questionid', models.TextField(blank=True, db_column='QuestionId', null=True)),
                ('commentid', models.TextField(blank=True, db_column='CommentId', null=True)),
                ('parentid', models.TextField(blank=True, db_column='ParentId', null=True)),
                ('parenttype', models.TextField(blank=True, db_column='ParentType', null=True)),
                ('displayindex', models.IntegerField(blank=True, db_column='DisplayIndex', null=True)),
                ('displaylevel', models.IntegerField(blank=True, db_column='DisplayLevel', null=True)),
                ('objectid', models.TextField(blank=True, db_column='ObjectId', null=True)),
                ('parentcategory', models.TextField(blank=True, db_column='ParentCategory', null=True)),
                ('globaldisplayindex', models.IntegerField(blank=True, db_column='GlobalDisplayIndex', null=True)),
                ('children', models.IntegerField(blank=True, db_column='Children', null=True)),
                ('displaycode', models.TextField(blank=True, db_column='DisplayCode', null=True)),
                ('internaldisplaycode', models.TextField(blank=True, db_column='InternalDisplayCode', null=True)),
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('showafterid', models.IntegerField(blank=True, db_column='ShowAfterId', null=True)),
            ],
            options={
                'db_table': 'VIQ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Viqinfo',
            fields=[
                ('qid', models.AutoField(db_column='QId', primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('author', models.TextField(blank=True, db_column='Author', null=True)),
                ('finalized', models.TextField(blank=True, db_column='Finalized', null=True)),
                ('registrationdate', models.TextField(blank=True, db_column='RegistrationDate', null=True)),
                ('numofquestions', models.IntegerField(blank=True, db_column='NumOfQuestions', null=True)),
                ('viqgui', models.TextField(blank=True, db_column='VIQGUI', null=True)),
                ('effectivedate', models.TextField(blank=True, db_column='EffectiveDate', null=True)),
                ('version', models.TextField(blank=True, null=True)),
                ('securitycolumn', models.TextField(blank=True, db_column='SecurityColumn', null=True)),
                ('visible', models.TextField(blank=True, db_column='Visible', null=True)),
            ],
            options={
                'db_table': 'VIQinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InspectorName', models.TextField(blank=True, null=True)),
                ('ansver', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_of_creation', models.DateTimeField(blank=True, default=datetime.datetime.today, null=True)),
                ('questionid', models.TextField(blank=True, null=True)),
                ('questioncode', models.TextField(blank=True, null=True)),
                ('categoryid', models.IntegerField(blank=True, null=True)),
                ('origin', models.TextField(blank=True, null=True)),
                ('categorynewid', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.DeleteModel(
            name='Category',
        ),
    ]
